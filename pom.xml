<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dk.dbc</groupId>
        <artifactId>microservice-pom</artifactId>
        <version>latest-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <artifactId>borchk-java</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <distributionManagement>
        <snapshotRepository>
            <id>mavenrepo.dbc.dk</id>
            <name>mavenrepo</name>
            <url>http://mavenrepo.dbc.dk/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>mavenrepo.dbc.dk</id>
            <url>http://mavenrepo.dbc.dk/nexus/content/groups/public</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>mavenrepo.dbc.dk</id>
            <url>http://mavenrepo.dbc.dk/nexus/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <javax.json.version>1.0.4</javax.json.version>
        <apache.commons.version>3.9</apache.commons.version>
        <apache.commons.validator.version>1.6</apache.commons.validator.version>
        <dbc-commons.version>1.3-SNAPSHOT</dbc-commons.version>
        <javax.cache>1.1.1</javax.cache>
        <maven.jaxws.plugin.version>2.6</maven.jaxws.plugin.version>
        <org.jvnet.jaxb2_commons>0.12.0</org.jvnet.jaxb2_commons>
        <javax.xml.webservices.api>2.0.1</javax.xml.webservices.api>
        <maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>${apache.commons.validator.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>${javax.json.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${javax.cache}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-runtime</artifactId>
            <version>${org.jvnet.jaxb2_commons}</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <!-- Copying docker resources to target is assumed by Dockerfile and Jenkins build -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process docker resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/docker</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <version>${maven.jaxws.plugin.version}</version>
                <dependencies>
                    <!-- put the XJC plugins on the jaxws-maven-plugin's classpath -->
                    <!-- More information at https://github.com/highsource/jaxb2-basics/wiki/Using-JAXB2-Basics-Plugins -->
                    <dependency>
                        <groupId>org.jvnet.jaxb2_commons</groupId>
                        <artifactId>jaxb2-basics</artifactId>
                        <version>${org.jvnet.jaxb2_commons}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDestDir>${project.build.directory}/generated-sources/jaxws-wsimport</sourceDestDir>
                    <xnocompile>true</xnocompile>
                    <verbose>true</verbose>
                    <extension>true</extension>
                    <target>2.2</target>
                    <vmArgs>
                        <vmArg>-Djavax.xml.accessExternalDTD=all</vmArg>
                        <vmArg>-Djavax.xml.accessExternalStylesheet=all</vmArg>
                        <vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
                    </vmArgs>
                    <xjcArgs>
                        <xjcArg>-Xequals</xjcArg>
                        <xjcArg>-XtoString</xjcArg>
                        <xjcArg>-XtoString-toStringStrategyClass=dk.dbc.borchk.logging.BorChkToStringStrategy</xjcArg>
                        <xjcArg>-XhashCode</xjcArg>
                    </xjcArgs>
                    <bindingFiles>
                        <bindingFile>${basedir}/src/main/resources/jaxb/jaxb-serializable-binding.xml</bindingFile>
                    </bindingFiles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <wsdlFiles>
                                <wsdlFile>borchk.wsdl</wsdlFile>
                            </wsdlFiles>
                            <wsdlDirectory>src/main/resources/wsdl</wsdlDirectory>
                            <wsdlLocation>WEB-INF/classes/wsdl/borchk.wsdl</wsdlLocation>
                            <staleFile>${project.build.directory}/jaxws/stale/borchk.stale</staleFile>
                        </configuration>
                        <id>wsimport-generate-borchk</id>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
